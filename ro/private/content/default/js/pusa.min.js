class Pusa{static R_OK="ok";static LOG_INFO="info";static LOG_DEBUG="debug";static LOG_WARNING="warning";static LOG_ERROR="error";static FOCUS_SET="set";static FOCUS_MERGE="merge";static FOCUS_EXCLUDE="exclude";static INSERT_BEFORE="before";static INSERT_AFTER="after";static INSERT_FIRST="first";static INSERT_LAST="last";static INSERT_WRAP="wrap";allowedDirectives=new Set([ "alert","config","log","dumpFocus","clear","root","body","parents","children","grab","push","pop","insert","remove","setAttr","setValue","setProp","setPassive","view","scroll","addClasses","removeClasses","action","trigger","event","start","stop","map","post","url","open","title","back","forward","setTray","clipboardFromTray","clipboardToTray","copyToTray","pasteFromTray","object","method","js" ]);constructor(initContainerId=null,initCall=null){this.cfg={highlightFocus: true,callback: "/pusa/default",log:{info: [ true,false ],debug: [ true,false ],warning: [ true,false ],error: [ true,false ]}};this.focus=[];this.focusStack=[];this.tray={};this.activeRequest=[];this.domStorage=new WeakMap();this.resultCode=Pusa.R_OK;this.resultDetail=[];this.postBuffer={};this.actions={};this.requestId=0;this.createIndicator();this.log(Pusa.LOG_INFO,'Pusa started');this.lastElement=null;this.lastEvent=null;let el=document.getElementById('pusa-init');if(el){this.processResponse(0,null,JSON.parse(el.innerHTML));el.remove();}else{if(initCall){this.sendCmd(initCall);}}}static create(initContainerId=null,initCall=null){return new Pusa(initContainerId,initCall);}eventHandler(id,type=null,element=null,event=null){const action=this.actions[ id ];if(!action){this.log(Pusa.LOG_WARNING,"action-not-found",{actionId: id,type});}else{const t=parseInt(this.getVal(action.throttle));if(t>0){if(!action.throttleTimer){action.throttleTimer=setTimeout(()=>{this.exec(action.directives,element,event);action.throttleTimer=null;action.lastEvent=null;},t);}}else{this.exec(action.directives,element,event);}}return this;}sendCmd(url,args={}){this.requestId++;const requestId=this.requestId;this.activeRequest.push(requestId);const xhr=new XMLHttpRequest();xhr.open("POST",url || this.cfg.callback,true);xhr.setRequestHeader("Content-Type","application/json");xhr.onreadystatechange=()=>{switch(xhr.readyState){case 4: if(xhr.status>=200 && xhr.status<300){if(xhr.responseText){let resp;try{resp=JSON.parse(xhr.responseText);}catch(e){this.log(Pusa.LOG_ERROR,"pusa-responce-error",{status: xhr.status,url: url,response: xhr.responseText,});}if(resp){this.processResponse(requestId,url,resp);}}else{this.log(Pusa.LOG_ERROR,"pusa-responce-is-empty",{status: xhr.status,url: url});}}else{this.log(Pusa.LOG_ERROR,"pusa-request-error",xhr.status);}break;}};xhr.send(JSON.stringify({request_id: requestId,...args}));}processResponse(id,url,resp){const idx=this.activeRequest.indexOf(id);if(idx>=0)this.activeRequest.splice(idx,1);if(Array.isArray(resp)&& resp[0]?.code){this.log(Pusa.LOG_ERROR,resp[0]?.code,{id: id,url: url,responce: resp});}else{if(resp?.dir){this.exec(resp.dir);}else{this.log(Pusa.LOG_ERROR,"pusa-directives-not-found",{id: id,url: url,responce: resp});}}this.updateIndicator();return this;}highlightFocus(){if(this.cfg.highlightFocus){this.focus?.forEach(el=>el.classList?.add("pusa-focus"));}return this;}applyFocus(newFocus,operator=Pusa.FOCUS_SET){this.focus?.forEach(el=>el.classList?.remove("pusa-focus"));switch(operator){case Pusa.FOCUS_SET: this.focus=newFocus;break;case Pusa.FOCUS_MERGE: this.focus=[ ...new Set([ ...this.focus,...newFocus ])];break;case Pusa.FOCUS_EXCLUDE: this.focus=this.focus.filter(el=>!newFocus.includes(el));break;default: this.focus=newFocus;break;}this.highlightFocus();return this;}exec(directives,element=null,event=null){if(!Array.isArray(directives)){this.log(Pusa.LOG_WARNING,"response-is-not-an-array",directives);}else{this.lastEvent=event;this.lastElement=element;directives.forEach(item=>{const [ dir,...args ]=item;if(this.allowedDirectives.has(dir)&& typeof this[ dir ]==="function"){this[ dir ].apply(this,args);}else{this.log(Pusa.LOG_WARNING,"unknown-pusa-directive",{directive: dir,arguments: args});}});this.lastEvent=null;this.lastElement=null;}return this;}getVal(operand,element=null,event=null){if(typeof operand !=="string")return operand;const parts=operand.split(" ");const source=parts[0] ?? "value";const subject=parts[1] ?? null;const method=parts[2] ?? null;switch(source){case "focus": case "actor": element=element || this.lastElement;if(source=="focus")element=this.focus[ 0 ];if(!element)return null;switch(method ?? "pusa"){case "pusa": switch(subject){case "id": return element.getAttribute("id");case "type": return element.tagName.toLowerCase();case "class": return element.getAttribute("class");case "disabled": return element.disabled===true;case "value": return(element.tagName==="INPUT" &&(element.type==="checkbox" || element.type==="radio"))? element.checked :(element.value ?? element.innerText);case "name": return element.getAttribute("name");default: return undefined;}case "attr": return subject ? element.getAttribute(subject): null;case "prop": return subject ? element[subject] : null;default: return null;}case "event": event=event || this.lastEvent;return subject ?(event ? event[subject] : null): event;case "tray": return subject ? this.tray[subject] : null;case "uuid": return crypto.randomUUID();case "value": default: return subject ?? operand;}}filter(elem,cond){if(!Array.isArray(cond))return !!cond;const [op,...args]=cond;switch(op){case "==": case "equal":{const [left,right]=args;return this.getVal(left,elem)==this.getVal(right,elem);}case "in":{const [ left,right ]=args;let stack=this.getVal(right,elem);if(stack){let needle=this.getVal(left,elem);stack=stack.split(/\s+/);return stack.includes(needle);}}case "not": return !this.filter(elem,args[ 0 ]);case "and": return args.every(sub=>this.filter(elem,sub));case "or": return args.some(sub=>this.filter(elem,sub));default: this.log(Pusa.LOG_WARNING,"unknown-filter-operator",cond);return null;}return false;}setResult(code,detail=[]){this.resultCode=code;this.resultDetail=detail;return this;}createIndicator(){return this .push().body().insert(null,Pusa.INSERT_LAST).setAttr([{id: "pusa-indicator",class: "hide"}]).pop();}updateIndicator(){return this .push().body().children([ "equal","#id","pusa-indicator" ]).setAttr([{class: this.activeRequest.length>0 ? "show" : "hide"}]).pop();}alert(message){window.alert(message);return this;}config(cfg={}){this.cfg={...this.cfg,...cfg};return this;}clear(){this.applyFocus([]);return this;}root(){this.applyFocus([ document.documentElement ]);return this;}body(){this.applyFocus([ document.body ]);return this;}parents(filter=true,depth=1,operator=Pusa.FOCUS_SET){let currentFocus=[ ...this.focus ];let result=[];for(let i=0;currentFocus.length>0 &&(depth===0 || i<depth);i++){const nextFocus=[];for(let el of currentFocus){const parent=el.parentElement;if(!parent || parent===document.documentElement || nextFocus.includes(parent))continue;nextFocus.push(parent);const res=this.filter(parent,filter);if(res===null)return this;if(res && !result.includes(parent)){result.push(parent);}}currentFocus=nextFocus;if(currentFocus.length===0)break;}this.applyFocus(result,operator);return this;}children(filter=true,depth=0,operator=Pusa.FOCUS_SET){let currentFocus=[ ...this.focus ];let resultBuffer=[];for(let i=0;currentFocus.length>0 &&(depth===0 || i<depth);i++){const nextFocus=[];for(let el of currentFocus){if(el.nodeType===1){for(let child of Array.from(el.children)){if(!resultBuffer.includes(child)&& !nextFocus.includes(child)){nextFocus.push(child);if(this.filter(child,filter)){resultBuffer.push(child);}}}}}currentFocus=nextFocus;if(currentFocus.length===0)break;}this.applyFocus(resultBuffer,operator);return this;}grab(operator=Pusa.FOCUS_SET){return this.applyFocus([ this.lastElement ],operator);}push(){this.focusStack.push([...this.focus]);return this;}pop(){if(this.focusStack.length>0){this.focus=this.focusStack.pop();this.highlightFocus();}else{this.setResult("stack-is-empty",[]);}return this;}insert(content=null,loc=Pusa.INSERT_LAST,count=1){const created=[];content=content ?? '<div></div>';this.focus.forEach(el=>{for(let i=0;i<count;i++){const tmp=document.createElement('div');tmp.innerHTML=content;const children=Array.from(tmp.childNodes);if(children.length===0)return;const first=children.shift();switch(loc){case Pusa.INSERT_BEFORE: el.parentNode.insertBefore(first,el);break;case Pusa.INSERT_AFTER: el.parentNode.insertBefore(first,el.nextSibling);break;case Pusa.INSERT_FIRST: el.insertBefore(first,el.firstChild);break;case Pusa.INSERT_LAST: el.appendChild(first);break;case Pusa.INSERT_WRAP: if(el.parentNode){el.parentNode.insertBefore(first,el);first.appendChild(el);}break;default: this.log(Pusa.LOG_ERROR,"unknown-insert-location",{loc,content});return this;}created.push(first);children.forEach(child=>{first.parentNode.insertBefore(child,first.nextSibling);created.push(child);});}});this.applyFocus(created);return this;}remove(){let newFocus=[];for(let el of this.focus){const data=this.domStorage.get(el);if(data?.handler && data?.type){el.removeEventListener(data.type,data.handler);}this.domStorage.delete(el);if(el.parentNode && !newFocus.includes(el.parentNode)){newFocus.push(el.parentNode);}el.remove();}this.applyFocus(newFocus);return this;}setPassive(flag=true){this.focus.forEach((el,i)=>{el.setAttribute("tabindex",flag ? "-1" : "0");if(flag){el.addEventListener("mousedown",e=>e.preventDefault());}else{el.removeEventListener("mousedown",e=>e.preventDefault());}});return this;}view(smooth=false){const el=this.focus[0];if(el){el.scrollIntoView({block: "nearest",inline: "nearest",behavior: smooth ? 'smooth' : 'auto'});}return this;}scroll(x=0,y=0,smooth=false){this.focus.forEach(el=>{el.scrollTo({left:(x==="start")? 0 :(x==="end")? el.scrollWidth : x,top:(y==="start")? 0 :(y==="end")? el.scrollHeight : y,behavior: smooth ? 'smooth' : 'auto'});});return this;}action(id,directives,throttle=0){if(directives===null)directives=[];const old=this.actions[ id ];if(old){if(old.timer){clearTimeout(old.timer);clearInterval(old.timer);}if(old.throttleTime){clearTimeout(old.throttleTime);}}this.actions[ id ]={directives: directives,throttle: throttle,timer: null,lastEvent: null,timerThrottle: null};return this;}trigger(id){const actionId=this.getVal(id);const action=this.actions[ actionId ];if(action && Array.isArray(action.directives)){this.focus.forEach(el=>{this.exec(action.directives,el);});}else{this.log(this.LOG_WARNING,'action-for-trigger-not-found',{id: id});}return this;}event(type,id){const ids=Array.isArray(id)? id : [ id ];const n=ids.length;this.focus.forEach((el,i)=>{const actionId=ids[ i % n ];const stored=this.domStorage.get(el)||{};if(stored.handlers && stored.handlers[ type ]){el.removeEventListener(type,stored.handlers[type]);}const handler=(evt)=>{this.eventHandler(actionId,type,el,evt);};el.addEventListener(type,handler);this.domStorage.set(el,{...stored,handlers:{...stored.handlers,[ type ]: handler},actionId});});return this;}map(args={}){this.postBuffer={...(this.postBuffer ||{}),...args};}post(url){let a={};for(const key in this.postBuffer){const val=this.getVal(this.postBuffer[ key ],this.lastElement,this.lastEvent);if(val)a[ key ]=val;}this.postBuffer={};this.sendCmd(url,a);}start(id,timeoutMls=1,continues=true){const evt=this.actions[ id ];if(!evt){this.log(Pusa.LOG_ERROR,"start:timer-not-found",{id:id});}else{this.stop(id);const cb=()=>{this.eventHandler(id,"timer");if(!continues)evt.timer=null;};evt.timer=continues ? setInterval(cb,timeoutMls): setTimeout(cb,timeoutMls);}return this;}stop(id){const evt=this.actions[ id ];if(evt){clearInterval(evt.timer);evt.timer=null;}return this;}url(url){if(typeof url==="string" && window.history?.replaceState){window.history.replaceState(null,"",url);}return this;}open(url=null,target="_self"){if(url){window.open(url,target);}else{window.location.reload(true);}return this;}title(title){document.title=title;return this;}back(){window.history.back();return this;}forward(){window.history.forward();return this;}setTray(key=null,value=null){if(key !==null){this.tray[ this.getVal(key)]=this.getVal(value);}return this;}clipboardFromTray(key=null){if(key !==null){navigator.clipboard.writeText(this.tray[ key ]);}return this;}clipboardToTray(key=null,directives=[]){if(key !==null){navigator.clipboard.readText().then(val=>{this.tray[ key ]=val;this.exec(directives);});}return this;}async copyToTray(key=null){if(key){this.tray[ key ]=window.getSelection().toString();}return this;}setAttr(tupple=[]){if(!Array.isArray(tupple)){tupple=[tupple];}if(tupple.length){const n=tupple.length;this.focus.forEach((el,i)=>{const attrs=tupple[i % n];for(const k in attrs){if(el.setAttribute){el.setAttribute(k,this.getVal(attrs[k],el));}}});}return this;}setValue(values=[]){if(values.length){const n=values.length;this.focus.forEach((el,i)=>{const val=this.getVal(values[ i % n ],el);switch(el.tagName){case "INPUT": switch(el.type.toLowerCase()){case "checkbox": case "radio": el.checked=!!val;break;case "text": case "search": case "password": case "tel": case "url": el.value=val;break;default: el.value=val;break;}break;case "TEXTAREA": el.value=val;break;default: el.innerHTML=val;}});}return this;}setProp(tupple=[]){if(tupple.length){const n=tupple.length;this.focus.forEach((el,i)=>{const props=tupple[ i % n ];for(const k in props)el[ k ]=props[ k ];});}return this;}addClasses(arg=[]){if(Array.isArray(arg)&& arg.length){const n=arg.length;this.focus.forEach((el,i)=>{const classes=arg[ i % n ];if(Array.isArray(classes)){classes.forEach(cls=>el.classList.add(cls));}});}return this;}removeClasses(arg=[]){if(Array.isArray(arg)&& arg.length){const n=arg.length;this.focus.forEach((el,i)=>{const classes=arg[ i % n ];if(Array.isArray(classes)){classes.forEach(cls=>el.classList.remove(cls));}});}return this;}classCreate(id){return this;}classDelete(arg){return this;}object(pathArr){let obj=globalThis;for(const key of pathArr){if(obj[ key ]===undefined)return this;obj=obj[ key ];}this.applyFocus([ obj ]);return this;}method(method,args=[],key){for(let el of this.focus){if(typeof el[ method ]==="function"){let result=el[ method ](...(args));if(key){this.tray[ key ]=result;}}}return this;}js(js,key){if(js && key){try{this.tray[ key ]=eval(js);}catch(e){this.tray[ key ]=e.toString();this.log(Pusa.LOG_ERROR,"js-error",e);}}return this;}log(type,msg,detail={},origin="front"){const route=this.cfg.log[ type ] || [ true,false ];if(route[0] && origin !=="back"){switch(type){case "error": console.error(msg,detail);break;case "warning": console.warn(msg,detail);break;case "debug": console.debug(msg,detail);break;case "info": console.info(msg,detail);break;default: console.log(msg,detail);break;}}if(route[1] && origin !=="back"){this.sendCmd('/log/message',{level: type,msg: msg,detail: detail});}return this;}dumpFocus(){console.log('Current focus:',this.focus);return this;}}